version: 0.2

phases:
  pre_build:
    commands:
      - echo Downloading models from S3...
      - mkdir -p models/base_models models/disney models/anime models/pixar models/watercolor models/comic
      - aws s3 cp s3://ia-cloud-models/base_models/ models/base_models/ --recursive
      - aws s3 cp s3://ia-cloud-models/disney/ models/disney/ --recursive
      - aws s3 cp s3://ia-cloud-models/anime/ models/anime/ --recursive
      - aws s3 cp s3://ia-cloud-models/pixar/ models/pixar/ --recursive
      - aws s3 cp s3://ia-cloud-models/watercolor/ models/watercolor/ --recursive
      - aws s3 cp s3://ia-cloud-models/comic/ models/comic/ --recursive
      - aws s3 cp s3://ia-cloud-models/styles_metadata.json models/
      
      - echo Logging in to Amazon ECR...
      - export AWS_ACCOUNT_ID=868849585509
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/fastapi-api-ia-cloud-projet
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest -f api/Dockerfile.api .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - aws ecr describe-images --repository-name fastapi-api-ia-cloud-projet --image-ids imageTag=latest --query 'imageDetails[].imageSizeInBytes' --output text

artifacts:
  files:
    - apprunner.yaml
    - appspec.yaml
    - imagedefinitions.json